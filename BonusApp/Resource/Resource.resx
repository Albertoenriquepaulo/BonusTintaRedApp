<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="AddCoupon" xml:space="preserve">
    <value>Add Coupon</value>
  </data>
  <data name="AddCouponClient" xml:space="preserve">
    <value>Add Coupon to Client</value>
  </data>
  <data name="Apply" xml:space="preserve">
    <value>Apply</value>
  </data>
  <data name="AreYouSureToDelete" xml:space="preserve">
    <value>Are you sure you want to delete the client</value>
  </data>
  <data name="AreYouSureToDeleteCoupon" xml:space="preserve">
    <value>Are you sure you want to delete the coupon</value>
  </data>
  <data name="AreYouSureWantToSetFirstPart" xml:space="preserve">
    <value>Are you sure you want to set</value>
  </data>
  <data name="AreYouSureWantToSetSecondPart" xml:space="preserve">
    <value>discount pages?</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Clear" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="ClickToSeeCouponDetails" xml:space="preserve">
    <value>Click to see coupon details</value>
  </data>
  <data name="ClickToSetPages" xml:space="preserve">
    <value>Click to set pages</value>
  </data>
  <data name="Client" xml:space="preserve">
    <value>Client</value>
  </data>
  <data name="ClientDetails" xml:space="preserve">
    <value>Client Details</value>
  </data>
  <data name="ClientList" xml:space="preserve">
    <value>Client List</value>
  </data>
  <data name="Clients" xml:space="preserve">
    <value>Clients</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="Coupon" xml:space="preserve">
    <value>Coupon</value>
  </data>
  <data name="CouponHasBeenCreated" xml:space="preserve">
    <value>The coupon has been created</value>
  </data>
  <data name="CouponId" xml:space="preserve">
    <value>Coupon Id</value>
  </data>
  <data name="CouponList" xml:space="preserve">
    <value>Coupon List</value>
  </data>
  <data name="CouponName" xml:space="preserve">
    <value>Coupon Name</value>
  </data>
  <data name="CouponsHaveBeenAdded" xml:space="preserve">
    <value>Coupons have been added</value>
  </data>
  <data name="CouponsSelected" xml:space="preserve">
    <value>Coupons selected</value>
  </data>
  <data name="CouponType" xml:space="preserve">
    <value>Coupon Type</value>
  </data>
  <data name="CouponTypes" xml:space="preserve">
    <value>Coupon Types</value>
  </data>
  <data name="CreateClient" xml:space="preserve">
    <value>Create Client</value>
  </data>
  <data name="CreateCoupon" xml:space="preserve">
    <value>Create Coupon</value>
  </data>
  <data name="CreateNewClient" xml:space="preserve">
    <value>Create New Client</value>
  </data>
  <data name="DisableDelete" xml:space="preserve">
    <value>Disable Delete</value>
  </data>
  <data name="DoesNotHaveAnyCoupon" xml:space="preserve">
    <value>does not have any coupon</value>
  </data>
  <data name="EditClient" xml:space="preserve">
    <value>Edit Client</value>
  </data>
  <data name="EditCoupon" xml:space="preserve">
    <value>Edit Coupon</value>
  </data>
  <data name="Emails" xml:space="preserve">
    <value>Emails</value>
  </data>
  <data name="EnableDelete" xml:space="preserve">
    <value>Enable Delete</value>
  </data>
  <data name="ErrorAddingCoupon" xml:space="preserve">
    <value>ERROR: The coupons could not have been added</value>
  </data>
  <data name="ErrorAplyingDiscount" xml:space="preserve">
    <value>ERROR: The discount could not be applied...</value>
  </data>
  <data name="ErrorCreatingUser" xml:space="preserve">
    <value>Error. User have not been created</value>
  </data>
  <data name="GoBack" xml:space="preserve">
    <value>Go Back</value>
  </data>
  <data name="HaveBeenSent" xml:space="preserve">
    <value>Have been sent</value>
  </data>
  <data name="IssuedCouponList" xml:space="preserve">
    <value>Issued Coupon List</value>
  </data>
  <data name="IssuedDate" xml:space="preserve">
    <value>Issued date</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="NewClient" xml:space="preserve">
    <value>New client</value>
  </data>
  <data name="NoClient" xml:space="preserve">
    <value>No client found...</value>
  </data>
  <data name="NoCouponFound" xml:space="preserve">
    <value>No Coupon Found</value>
  </data>
  <data name="NoCouponIssued" xml:space="preserve">
    <value>No Coupon Issued</value>
  </data>
  <data name="OkAddingCoupon" xml:space="preserve">
    <value>Coupon has been added</value>
  </data>
  <data name="OkAplyingDiscount" xml:space="preserve">
    <value>The discount has been applied</value>
  </data>
  <data name="OkCreatingUser" xml:space="preserve">
    <value>Usuario ha sido creado</value>
  </data>
  <data name="Pages" xml:space="preserve">
    <value>Pages</value>
  </data>
  <data name="PasswordError" xml:space="preserve">
    <value>Password Incorrect</value>
  </data>
  <data name="PleaseSignIn" xml:space="preserve">
    <value>Please Sign In</value>
  </data>
  <data name="PrintedPages" xml:space="preserve">
    <value>Printed pages</value>
  </data>
  <data name="RemainingPages" xml:space="preserve">
    <value>Remaining pages</value>
  </data>
  <data name="SelectCoupon" xml:space="preserve">
    <value>Select Coupon</value>
  </data>
  <data name="SendEmail" xml:space="preserve">
    <value>Send Email</value>
  </data>
  <data name="SendingEmail" xml:space="preserve">
    <value>Sending email...</value>
  </data>
  <data name="SetPages" xml:space="preserve">
    <value>Set Pages</value>
  </data>
  <data name="SetPagesToDiscount" xml:space="preserve">
    <value>Set Pages to Discount</value>
  </data>
  <data name="TotalClients" xml:space="preserve">
    <value>Total clients</value>
  </data>
  <data name="TotalCouponPages" xml:space="preserve">
    <value>Total Coupon Pages</value>
  </data>
  <data name="TotalCoupons" xml:space="preserve">
    <value>Total coupons</value>
  </data>
  <data name="TotalTransactions" xml:space="preserve">
    <value>Total Transactions</value>
  </data>
  <data name="TransactionDate" xml:space="preserve">
    <value>Transaction Date</value>
  </data>
  <data name="TypeNumberOfPages" xml:space="preserve">
    <value>Type number of pages</value>
  </data>
  <data name="Update" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
</root>