@page "/coupon/edit/{Id:int}"
@inject CouponServices couponServices
@inject NavigationManager navManager
@inject IStringLocalizer<Resource> localizer

<h3>@localizer["EditCoupon"]</h3>

@if (coupon != null)
{
    <EditForm Model="coupon" OnValidSubmit="Update">
        <DataAnnotationsValidator />
        <div class="field">
            <label class="label">@localizer["Name"]</label>
            <div class="control">
                <InputText class="input" type="text" placeholder="Text input" @bind-Value="@coupon.Name" />
                <ValidationMessage For="@(()=>coupon.Name)" />
            </div>
            <label class="label mt-2">@localizer["Pages"]</label>
            <div class="control">
                <InputNumber class="input" type="number" placeholder="Text input" @bind-Value="@coupon.Pages" />
                <ValidationMessage For="@(()=>coupon.Pages)" />
            </div>
        </div>
        <button class="button is-success  is-link is-outlined" type="submit">@localizer["Update"]</button>
        <BackButtonComponent />
    </EditForm>
}

@code {
    [Parameter] public int Id { get; set; }

    public Coupon coupon { get; set; } = new Coupon();

    protected async override Task OnInitializedAsync()
    {
        coupon = await couponServices.GetCouponAsync(Id);
    }

    private async Task Update()
    {
        await couponServices.UpdateCouponAsync(coupon);
        navManager.NavigateTo("/coupon");
    }
}