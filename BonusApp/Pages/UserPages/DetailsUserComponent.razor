@page "/users/details/{Id:int}"
@inject UserServices userServices
@inject NavigationManager navManager

<h3>User Details</h3>
<p><strong>Usuario: </strong>@user.Email</p>

@if (user.UserBonus.Count == 0)
{
    <p class="has-background-warning-light">The user does not have any bonus.</p>
}
else
{
    @foreach (var item in user.UserBonus)
    {
        <div class="content">
            <p class="is-marginless"><strong>Bonus Id: </strong>@item.TRCId</p>
            <p class="is-marginless"><strong>Bonus Name: </strong>  @item.Bonus.Name</p>
            <p class="is-marginless"><strong>Spent pages: </strong>@item.SpentPages</p>
            <p class="is-marginless"><strong>Purchase day:     </strong>@item.Date</p>
            <hr />
        </div>
    }
}

<AddBonusComponent />
<hr />
<a href="users" style="text-decoration: none;" class="button is-info is-light">Back to List</a>



@code {
    User user = new User();
    [Parameter] public int Id { get; set; }

    protected async override Task OnInitializedAsync()
    {
        user = await userServices.GetUserAsync(Id);
    }
}
