@inject IModalService myModal
@inject IStringLocalizer<Resource> localizer

<div class="m-0 p-0">
    <div id="login" class="m-0 p-0">
        <div class="login-card m-0 p-0">
            <input id="password" type="password" name="password" title="password" placeholder="Password" required @bind="pass"
                   @onclick="CleanMessage" @onkeyup="@(e => KeyWasPressed(e))">
            <p class="has-text-danger is-size-7 is-italic">@message</p>
            <button class="button is-primary is-outlined is-small mt-1 pt-1" @onclick="Login">Login</button>
        </div>
    </div>
</div>

@code {
    [Parameter] public bool disabled { get; set; }
    [CascadingParameter] BlazoredModalInstance BlazoredModalAllowUser { get; set; } = new BlazoredModalInstance();

    public string pass { get; set; }
    private string message = null;

    void Login()
    {
        if (pass == "123")
        {
            BlazoredModalAllowUser.Close(ModalResult.Ok(true));
            return;
        }
        else
        {
            message = localizer["PasswordError"];
        }
    }

    private void CleanMessage()
    {
        message = null;
    }

    private void KeyWasPressed(KeyboardEventArgs args)
    {
        if (args.Key != "Enter")
        {
            return;
        }
        Login();
    }
}