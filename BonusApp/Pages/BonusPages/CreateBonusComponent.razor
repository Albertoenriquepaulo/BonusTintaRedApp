@page "/bonus/create"
@inject BonusServices bonusServices
@inject IModalService myModal

<h3>Create Coupon</h3>

<EditForm Model="bonus" OnValidSubmit="Create">
    <DataAnnotationsValidator />
    <div class="field">
        <label class="label">Name</label>
        <div class="control">
            <InputText class="input" type="text" placeholder="Coupon name" @bind-Value="@bonus.Name" oninput="this.value=this.value.toUpperCase()" />
            <ValidationMessage For="@(()=>bonus.Name)" />

        </div>
        <label class="label mt-2">Page</label>
        <div class="control">
            <InputNumber class="input" type="number" placeholder="Number input" @bind-Value="@bonus.Pages" />
            <ValidationMessage For="@(()=>bonus.Pages)" />
        </div>
    </div>

    <button class="button is-success is-link is-outlined" type="submit">Create</button>
    <a href="bonus" style="text-decoration: none;" class="button is-info is-link  is-outlined">Back to List</a>
</EditForm>

@code {
    private Bonus bonus = new Bonus();

    private async Task Create()
    {
        bonus.Name = bonus.Name.ToUpper();
        await bonusServices.AddBonusAsync(bonus);
        myModal.Show<ConfirmCreateComponent>($"The bonus has been created under the ID {bonus.Id}");
        bonus = new Bonus();
    }
}
