@page "/bonuspurchased/allbonus"
@inject UserBonusServices userBonusServices
@inject IJSRuntime JSRuntime
@inject IModalService myModal

<h3>Coupon List</h3>

@if (userBonuses == null || userBonuses.Count == 0)
{
    <h2>No Coupon Issued</h2>
    <a href="/" style="text-decoration: none;" class="button is-info  is-link is-outlined">Home</a>
}
else
{
    <div class="table-container">
        <table class="table is-striped" id="myTable">
            <thead>
                <tr class="th has-text-centered">
                    <th>Coupon Id</th>
                    <th>Coupon Type</th>
                    <th>Client</th>
                    <th>Pages</th>
                    <th>Printed Pages</th>
                    <th>Remaining Pages</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var userBonus in userBonuses)
                {
                    { RemainingPages(userBonus.Bonus.Pages, userBonus.SpentPages); }
                    url[0] = $"bonuspurchased/discountpages/{userBonus.Id}";
                    url[1] = $"bonuspurchased/details/{userBonus.Id}";
                    <tr class="has-text-centered">
                        <td style="vertical-align: middle">@userBonus.TRCId</td>
                        <td style="vertical-align: middle">@userBonus.Bonus.Name</td>
                        <td style="vertical-align: middle">@userBonus.User.Email</td>
                        <td style="vertical-align: middle">@userBonus.Bonus.Pages</td>
                        <td style="vertical-align: middle">@userBonus.SpentPages</td>
                        <td style="vertical-align: middle">@remainingPages</td>
                        <td style="vertical-align: middle">
                            <a href="@(remainingPages == 0 ? "javascript:function() { return false; }": url[0])"
                               class="button is-success is-small is-link is-outlined" style="text-decoration:none;"
                               disabled=@(remainingPages == 0 ? true: false)>
                                Discount Pages
                            </a>
                            <a href="@url[1]" class="button is-primary is-small is-link is-outlined" style="text-decoration:none;">
                                <span class="oi oi-magnifying-glass"></span>
                            </a>
                            <a @onclick="@(()=>HandleDelete(userBonus))" class="button is-danger is-small is-link is-outlined">
                                <span class="oi oi-trash"></span>
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

    </div>
}


@code {

    List<UserBonus> userBonuses;
    string[] url = new string[2];
    private int remainingPages;

    protected async override Task OnInitializedAsync()
    {
        userBonuses = await userBonusServices.GetAllUserBonusAsync();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await JSRuntime.InvokeAsync<object>("DataTable");
    }

    private async Task HandleDelete(UserBonus userBonus)
    {
        var messageForm = myModal.Show<ConfirmDeleteComponent>($"Are you sure you want to delete {userBonus.TRCId} bonus?");
        var result = await messageForm.Result;

        if (result.Cancelled)
        {
            return;
        }

        if ((bool)result.Data)
        {
            await userBonusServices.DeleteUserBonusAsync(userBonus);
            userBonuses = await userBonusServices.GetAllUserBonusAsync();
        }
    }
    private void RemainingPages(int pages, int spentPages)
    {
        remainingPages = pages - spentPages;
    }

}
