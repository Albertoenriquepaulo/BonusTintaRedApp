@page "/clients"
@inject ClientServices clientServices
@inject IModalService myModal
@inject IJSRuntime JSRuntime

<h3>Clients List</h3>

@if (clients == null || clients.Count == 0)
{
    <h2>No client found</h2>
    <a href="clients/create" style="text-decoration: none;" class="button is-primary is-link is-outlined is-small mb-3">Create Client</a>
}
else
{
    <a href="clients/create" style="text-decoration: none;" class="button is-primary is-link is-outlined is-small mb-3">Create Client</a>
    <HandleDeleteButtonComponent OnAllowButtonStateChange="OnAllowButtonStateChange" />

    <div class="table-container">
        <table class="table is-striped" id="myTable">
            <thead>
                <tr class="th has-text-centered">
                    <th></th>
                    <th>Email</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var client in clients)
                {
                    url[0] = $"clients/edit/{client.Id}";
                    url[1] = $"clients/details/{client.Id}";
                    <tr class="has-text-centered">
                        <td style="vertical-align: middle">@(index++)</td>
                        <td style="vertical-align: middle">@client.Email</td>
                        <td style="vertical-align: middle">
                            <a href="@url[1]" class="button is-primary is-small is-link is-outlined" style="text-decoration: none;">Add Coupon</a>
                            <a href="@url[0]" class="button is-success is-small is-link is-outlined" style="text-decoration: none;">
                                <span class="oi oi-pencil"></span> @*EDIT*@
                            </a>
                            <a href="@url[1]" class="button is-info is-small is-link is-outlined" style="text-decoration: none;">
                                <span class="oi oi-magnifying-glass"></span> @*DETAILS*@
                            </a>
                            <a class="button is-danger is-small is-link is-outlined" style="text-decoration: none;"
                               @onclick="@(()=>HandleDelete(client))" disabled=@disabled>
                                <span class="oi oi-trash"></span> @*DELETE*@
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@code {
    List<Client> clients;
    private int index = 1;
    string[] url = new string[2];

    private bool disabled = true;

    protected async override Task OnInitializedAsync()
    {
        clients = await clientServices.GetAllClientAsync();
    }

    private async Task HandleDelete(Client client)
    {
        if (disabled)
        {
            return;
        }
        var messageForm = myModal.Show<ConfirmDeleteComponent>($"Are you sure you want to delete the {client.Email} Client?");
        var result = await messageForm.Result;

        if (result.Cancelled)
        {
            return;
        }

        if ((bool)result.Data)
        {
            await clientServices.DeleteClientAsync(client);
            clients = await clientServices.GetAllClientAsync();
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        index = 1;
        await JSRuntime.InvokeAsync<object>("DataTable");
    }

    void OnAllowButtonStateChange(bool value)
    {
        disabled = value;
    }
}